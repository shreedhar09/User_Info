{"version":3,"sources":["Components/Form.js","Components/EditModal.js","Components/UserInfo.js","Components/Login.js","Components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleChange","e","setState","target","name","value","store","firstName","state","lastname","gender","address","phone","date","email","username","password","submitInfo","validator","allValid","StoreJson","ConvertoJson","JSON","stringify","localStorage","setItem","console","log","alert","history","replace","showMessages","forceUpdate","SimpleReactValidator","autoForceUpdate","Fragment","className","id","type","aria-label","aria-describedby","this","onChange","message","htmlFor","rows","onClick","class","to","Component","EditModal","onOpenModal","open","onCloseModal","UserData","window","location","reload","onClose","center","React","UserInfo","getDataFromLocalStorage","getItem","convertDatajsonIntoObject","localStorageData","parse","jsdata","Login","loginUser","uName","usernameLogin","uPass","passwordLogin","uregi","upregi","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdc66923.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { RadioGroup, Radio } from \"react-radio-group\";\nimport { Link } from \"react-router-dom\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastname: \"\",\n      gender: \"Male\",\n      address: \"\",\n      phone: \"\",\n      date: \"\",\n      email: \"\",\n      \n      username: \"\",\n      password: \"\"\n      \n    };\n\n    this.validator = new SimpleReactValidator({ autoForceUpdate: this });\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  \n\n  store = () => {\n    return {\n      \n      firstName: this.state.firstName,\n      lastname: this.state.lastname,\n      gender: this.state.gender,\n      address: this.state.address,\n      phone: this.state.phone,\n      date: this.state.date,\n      email: this.state.email,\n      \n      username: this.state.username,\n      password: this.state.password\n      \n    };\n  };\n\n  submitInfo = () => {\n    debugger\n    if (this.validator.allValid()) {\n      let StoreJson = this.store();\n      let ConvertoJson = JSON.stringify(StoreJson);\n      localStorage.setItem(\"StoreInfo\", ConvertoJson);\n      console.log(ConvertoJson);\n      alert(\"Registered successfully\");\n      this.props.history.replace(\"/Login\");\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-lg-3 formcontent\" />\n          <div className=\"col-lg-6 formcontent\">\n            <form className=\"loginContainer\">\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    FirstName\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"firstName\"\n                  className=\"form-control\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.firstName}\n                  onChange={this.handleChange}\n                />\n                {this.validator.message(\n                  \"firstName\",\n                  this.state.firstName,\n                  \"required|min:2\"\n                )}\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    LastName\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"lastname\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.lastname}\n                  onChange={this.handleChange}\n                />\n                {this.validator.message(\n                  \"lastname\",\n                  this.state.lastname,\n                  \"required|min:2\"\n                )}\n              </div>\n\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    Email\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  className=\"form-control\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                />\n                {this.validator.message(\n                  \"email\",\n                  this.state.email,\n                  \"required|email\"\n                )}\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    Contact Number\n                  </span>\n                </div>\n                <input\n                  type=\"number\"\n                  name=\"phone\"\n                  className=\"form-control\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.phone}\n                  onChange={this.handleChange}\n                />\n                {this.validator.message(\n                  \"phone\",\n                  this.state.phone,\n                  \"required|phone|max:10\"\n                )}\n              </div>\n\n              <div>\n                <div className=\"form-group\">\n                  <label\n                    htmlFor=\"exampleFormControlTextarea1\"\n                    className=\"lblgender\"\n                  >\n                    Address\n                  </label>\n                  <textarea\n                    className=\"form-control\"\n                    name=\"address\"\n                    id=\"exampleFormControlTextarea1\"\n                    rows=\"3\"\n                    value={this.state.address}\n                    onChange={this.handleChange}\n                  />\n                  {this.validator.message(\n                    \"address\",\n                    this.state.address,\n                    \"required\"\n                  )}\n                </div>\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    Username\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.username}\n                  onChange={this.handleChange}\n                />\n                {this.validator.message(\n                  \"username\",\n                  this.state.username,\n                  \"required|alpha_num|min:2\"\n                )}\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    Password\n                  </span>\n                </div>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.password}\n                  onChange={this.handleChange}\n                />\n                {this.validator.message(\n                  \"password\",\n                  this.state.password,\n                  \"required|alpha_num|min:3\"\n                )}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-info\"\n                onClick={this.submitInfo}\n              >\n                Submit\n              </button>\n              \n              <Link class=\"nav-link\" to=\"/Login\">\n                if you are already register then Login\n                </Link>\n              \n            </form>\n          </div>\n          <div className=\"col-lg-3 formcontent\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react'\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from 'react-responsive-modal';\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nclass EditModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        open: false,\r\n        firstName:this.props.UserData.firstName,\r\n        lastname:this.props.UserData.lastname,\r\n        phone:this.props.UserData.phone,\r\n        email:this.props.UserData.email\r\n      };\r\n      this.validator = new SimpleReactValidator({ autoForceUpdate: this });\r\n    }\r\n      onOpenModal = () => {\r\n        this.setState({ open: true });\r\n      };\r\n     \r\n      onCloseModal = () => {\r\n        this.setState({ open: false });\r\n      };\r\n     \r\n      \r\n  store = () => {\r\n    return {\r\n      \r\n      firstName: this.state.firstName,\r\n      lastname: this.state.lastname,\r\n      gender: this.props.UserData.gender,\r\n      address: this.props.UserData.address,\r\n      phone: this.state.phone,\r\n      date: this.props.UserData.date,\r\n      email: this.props.UserData.email,\r\n      username: this.props.UserData.username,\r\n      password: this.props.UserData.password\r\n      \r\n    };\r\n  };\r\n \r\n  submitInfo = () => {\r\n    if (this.validator.allValid()) {\r\n      let StoreJson = this.store();\r\n      let ConvertoJson = JSON.stringify(StoreJson);\r\n      localStorage.setItem(\"StoreInfo\", ConvertoJson);\r\n      console.log(ConvertoJson);\r\n      alert(\"Edit User successfully\");\r\n      this.setState({ open: false });\r\n      window.location.reload(false)\r\n    } else {\r\n      \r\n     // alert(this.validator.errorMessages.email,this.validator.errorMessages.lastname,this.validator.errorMessages.phone,this.validator.errorMessages.firstName)\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n   \r\n    \r\n  };\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    let { open } = this.state;\r\n    return (\r\n        \r\n        <React.Fragment>\r\n        <button onClick={this.onOpenModal}>Edit</button>\r\n        <Modal open={open} onClose={this.onCloseModal} center>\r\n          <h2>Edit User Information</h2>\r\n          <div className=\"row\">\r\n              \r\n            <form className=\"loginContainer\">\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span\r\n                    className=\"input-group-text\"\r\n                    id=\"inputGroup-sizing-default\"\r\n                  >\r\n                    FirstName\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"firstName\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"Default\"\r\n                  aria-describedby=\"inputGroup-sizing-default\"\r\n                  value={this.state.firstName}\r\n                  onChange={this.handleChange}\r\n                />\r\n                 {this.validator.message(\r\n                  \"firstName\",\r\n                  this.state.firstName,\r\n                  \"required|min:2\"\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span\r\n                    className=\"input-group-text\"\r\n                    id=\"inputGroup-sizing-default\"\r\n                  >\r\n                    LastName\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"lastname\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"Default\"\r\n                  aria-describedby=\"inputGroup-sizing-default\"\r\n                  value={this.state.lastname}\r\n                  onChange={this.handleChange}\r\n                />\r\n                  {this.validator.message(\r\n                  \"lastname\",\r\n                  this.state.firstName,\r\n                  \"required|min:2\"\r\n                )}\r\n              </div>\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span\r\n                    className=\"input-group-text\"\r\n                    id=\"inputGroup-sizing-default\"\r\n                  >\r\n                contact Number\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"phone\"\r\n                  aria-label=\"Default\"\r\n                  aria-describedby=\"inputGroup-sizing-default\"\r\n                  value={this.state.phone}\r\n                  onChange={this.handleChange}\r\n                />\r\n                 {this.validator.message(\r\n                  \"phone\",\r\n                  this.state.phone,\r\n                  \"required|phone|max:10\"\r\n                )}\r\n              </div>\r\n              <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span\r\n                    className=\"input-group-text\"\r\n                    id=\"inputGroup-sizing-default\"\r\n                  >\r\n                    Email\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  aria-label=\"Default\"\r\n                  aria-describedby=\"inputGroup-sizing-default\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n                 {this.validator.message(\r\n                  \"email\",\r\n                  this.state.email,\r\n                  \"required|email\"\r\n                )}\r\n                \r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-info\"\r\n                onClick={this.submitInfo}\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n          \r\n\r\n        \r\n        </Modal>\r\n        </React.Fragment>\r\n    \r\n    );\r\n  }\r\n}\r\nexport default EditModal;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport EditModel from \"../Components/EditModal\";\nexport class UserInfo extends Component {\n  constructor(props) {\n    super(props);\n  }\ndebugger\n  getDataFromLocalStorage = () => {\n    let data = localStorage.getItem(\"StoreInfo\");\n    return data;\n  };\n\n  convertDatajsonIntoObject = () => {\n    let localStorageData = this.getDataFromLocalStorage();\n    return JSON.parse(localStorageData);\n  };\ndebugger\n  jsdata = this.convertDatajsonIntoObject();\n  componentDidUpdate()\n  {\n      console.log(\"componentDidUpdate 1 \");\n  }\n\n  componentDidMount(){\n    console.log(\"componentDidUpdate 3 \");\n  }\n  render() {\n    debugger\n    console.log(\"componentDidUpdate 2 \");\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-3 \" />\n          <div className=\"col-lg-6 groupTogether\">\n            <h1 className=\"mainTag\">User Information</h1>\n            <h4 className=\"heading\">\n              Firstname - {this.jsdata.firstName}\n            </h4>\n            <h4 className=\"heading\">\n              Lastname - {this.jsdata.lastname}\n            </h4>\n            <h4 className=\"heading\">\n              Contact Number - {this.jsdata.phone}\n            </h4>\n            <h4 className=\"heading\">\n              Email - {this.jsdata.email}\n            </h4>\n            <h4 className=\"heading\">\n              \n              <EditModel UserData={this.jsdata}/>\n            </h4>\n          </div>\n          <div className=\"col-lg-3 \" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport UserInfo from \"./UserInfo\";\n\nexport class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usernameLogin: \"\",\n      passwordLogin: \"\"\n    };\n\n    this.validator = new SimpleReactValidator({ autoForceUpdate: this });\n  }\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  \n\n  getDataFromLocalStorage = () => {\n    let data = localStorage.getItem(\"StoreInfo\");\n    return data;\n  };\n\n  convertDatajsonIntoObject = () => {\n    let localStorageData = this.getDataFromLocalStorage();\n    return JSON.parse(localStorageData);\n  };\n\n  loginUser = () => {\n    debugger\n    let jsdata = this.convertDatajsonIntoObject();\n    console.log(jsdata);\n    //console.log(jsdata.firstName)\n\n    if (this.validator.allValid()) {\n      if(jsdata !== null){\n      let uName = this.state.usernameLogin;\n      let uPass = this.state.passwordLogin;\n      let uregi = jsdata.username;\n      let upregi = jsdata.password;\n\n      \n      if (uName === uregi) {\n        if (uPass === upregi) {\n          \n          this.props.history.replace(\"/UserInfo\");\n        } else {\n          alert(\"Password Does Not Match\");\n        }\n      } else {\n        alert(\"Username Does Not Match\");\n      }\n    }\n    else {\n      alert(\"Please first Register \");\n    }\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-lg-3 logincontent\" />\n          <div className=\"col-lg-6 logincontent\">\n            <form className=\"loginContainer\">\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    Username\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"usernameLogin\"\n                  className=\"form-control\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.usernameLogin}\n                  onChange={this.handleChange}\n                />\n\n                {this.validator.message(\n                  \"usernameLogin\",\n                  this.state.usernameLogin,\n                  \"required|min:2\"\n                )}\n              </div>\n\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span\n                    className=\"input-group-text\"\n                    id=\"inputGroup-sizing-default\"\n                  >\n                    Password\n                  </span>\n                </div>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"passwordLogin\"\n                  aria-label=\"Default\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  value={this.state.passwordLogin}\n                  onChange={this.handleChange}\n                />\n                {this.validator.message(\n                  \"passwordLogin\",\n                  this.state.passwordLogin,\n                  \"required|min:2\"\n                )}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-info\"\n                onClick={this.loginUser}\n              >\n                Login\n              </button>\n              \n                \n                <Link class=\"nav-link\" to=\"/\">\n                Not yet Register, Register Now \n                </Link>\n            \n            </form>\n            \n\n          </div>\n          <div className=\"col-lg-3 logincontent\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Navbar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a class=\"navbar-brand\" href=\"#\">\n            Form\n          </a>\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\" />\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav\">\n              <li class=\"nav-item active\">\n                <Link class=\"nav-link\" to=\"/\">\n                  Register <span class=\"sr-only\">(current)</span>\n                </Link>\n              </li>\n              <li class=\"nav-item\">\n                <Link class=\"nav-link\" to=\"/Login\">\n                  Login\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./ComponentCSS/App.css\";\nimport Form from \"./Components/Form\";\nimport Login from \"./Components/Login\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport UserInfo from \"./Components/UserInfo\";\n\nclass App extends Component {\n\n  render() {\n    console.log(\"app app \");\n    return (\n      <div className=\"BG\">\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/\" exact component={Form} />\n            <Route path=\"/UserInfo\" exact component={UserInfo} />\n            <Route path=\"/Login\" component={Login} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./ComponentCSS/form.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\"; //BrowserRouter Important\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}